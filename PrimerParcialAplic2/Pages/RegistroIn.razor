@page "/RegistroIn"
@using PrimerParcialAplic2.Models
@using PrimerParcialAplic2.Controllers



<h3>Registro</h3>

<EditForm Model="@inscripciones" OnInvalidSubmit="Guardar">
    <div>
        <DataAnnotationsValidator></DataAnnotationsValidator>

        <div class=" form-group">
            <label for=" InscripcionId">Id</label>
            <InputNumber @bind-Value="inscripciones.InscripcionId"></InputNumber>
            <button type="button" class=" btn-primary " @onclick="Buscar">Buscar</button>
            <ValidationMessage For="@(()=>inscripciones.InscripcionId)" />

        </div>
        <div class="form-group">
            <label for=" Semestre">Semestre</label>
            <InputText @bind-Value="inscripciones.Semestre" class="form-group" />
            <ValidationMessage For="@(()=>inscripciones.Semestre)" />
        </div>


        <div class="form-group">
            <label for=" Limite">Limite</label>
            <InputNumber @bind-Value="inscripciones.Limite" @oninput="Calcular" @onfocus="Calcular" @onfocusout="Calcular" disabled class="form-group"></InputNumber>
            <ValidationMessage For="@(()=>inscripciones.Limite)" />
        </div>

        <div class="form-group">
            <label for="Tomados">Tomados</label>
            <InputNumber @bind-Value="inscripciones.Tomado" @oninput="Calcular" @onfocus="Calcular" @onfocusout="Calcular" class="form-group" ></InputNumber>
            <ValidationMessage For="@(()=>inscripciones.Tomado)" />
        </div>



        <div class="form-group">
            <label for="Dispobible">Disponible</label>
            <InputNumber @bind-Value="inscripciones.Disponible" disabled class="form-group" />
            <ValidationMessage For="@(()=>inscripciones.Disponible)" />
        </div>
        <ValidationSummary></ValidationSummary>
        <div class="form-group">

            <button type="submit" class="btn btn-primary"> Guardar</button>
            <button type="button" class="btn btn-danger" @onclick="Eliminar">Eliminar</button>
            <button type="button" class="btn btn-danger" @onclick="Limpiar">Limpiar</button>
        </div>
    </div>
    <h5>@Mensaje</h5>




</EditForm>


@code {
    public Inscripciones inscripciones = new Inscripciones();
    public string Mensaje;


    public void Guardar()
    {
        InscripcionControllers inscripcionControllers = new InscripcionControllers();
        Calcular();

        if (inscripcionControllers.Guardar(inscripciones))
        {
            this.inscripciones = new Inscripciones();
            Mensaje = "Gurdado";

        }
        else
        {
            this.inscripciones = new Inscripciones();
            Mensaje = "error al guardar";
        }

    }
    public void Limpiar()
    {
        this.inscripciones = new Inscripciones();

    }
    public void Buscar()
    {
        InscripcionControllers inscripcionControllers = new InscripcionControllers();

        var Inscripciones = inscripcionControllers.Buscar(inscripciones.InscripcionId);
        if (Inscripciones != null)
        {
            inscripciones = Inscripciones;
            Mensaje = "inscripcion encontrada";
        }
        else
        {
            this.inscripciones = new Inscripciones();
            Mensaje = "inscripcion no encontrada";
        }

    }
    public void Eliminar()
    {
        InscripcionControllers inscripcionControllers = new InscripcionControllers();

        var Inscripciones = inscripcionControllers.Buscar(inscripciones.InscripcionId);
        if (Inscripciones != null)
        {
            if (inscripcionControllers.Eliminar(inscripciones.InscripcionId))
            {
                this.inscripciones = new Inscripciones();
                Mensaje = "Inscripcion eliminada";
            }
            else
            {
                this.inscripciones = new Inscripciones();
                Mensaje = "Error al Eliminar ";
            }
        }
    }

    public void Calcular()
    {
        inscripciones.Disponible = inscripciones.Limite - inscripciones.Tomado;
    }


}
